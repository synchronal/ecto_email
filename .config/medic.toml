[doctor]
checks = [
  {check = "homebrew"},
  {check = "tool-versions", command = "plugin-installed", args = {plugin = "elixir"}},
  {check = "tool-versions", command = "plugin-installed", args = {plugin = "erlang"}},
  {check = "tool-versions", command = "package-installed", args = {plugin = "elixir"}},
  {check = "tool-versions", command = "package-installed", args = {plugin = "erlang"}},
  {check = "elixir", command = "local-hex"},
  {check = "elixir", command = "local-rebar"},
  {check = "elixir", command = "packages-installed"},
]

[test]
checks = [
  {name = "Check for Elixir warnings", shell = "mix compile --force --warnings-as-errors", verbose = true},
  {name = "Run Elixir tests", shell = "mix test --color --warnings-as-errors", verbose = true},
]

[audit]
checks = [
  { name = "elixir: check formatting", shell = "mix format --check-formatted" },
  { step = "elixir", command = "credo" },
  { step = "elixir", command = "dialyzer"  },
  { step = "elixir", command = "audit-deps"  },
  { check = "elixir", command = "unused-deps" },
  { name = "Check md format", shell = "bin/dev/format-md --check", remedy = "bin/dev/format-md --all" },
]

[outdated]
checks = [
   {check = "elixir"},
]

[update]
steps = [
  {step = "git", command = "pull"},
  {step = "elixir", command = "get-deps"},
  {step = "elixir", command = "compile-deps", args = {mix-env = "dev"}},
  {step = "elixir", command = "compile-deps", args = {mix-env = "test"}},
  {doctor = {}},
]

[shipit]
steps = [
  {audit = {}},
  {update = {}},
  {test = {}},
  {step = "git", command = "push" },
  { step = "github", command = "link-to-actions", verbose = true },
]

